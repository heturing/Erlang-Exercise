-module(ex18_1).
-compile(export_all).

start(Browser) ->
    B0 = erl_eval:new_bindings(),
    spawn(?MODULE, running, [B0,1]).
running(B0, N) ->
    receive
	{From, Bin} ->
	    {Value, B1} = string2value(binary_to_list(Bin), B0),
	    BV = bf("~w > <font color='red'>~s</font><br>~p<br>", 
                    [N, Bin, Value]),
	    From ! BV,
	    running(B1, N+1)
    end.

string2value(Str, Bindings0) ->
    case erl_scan:string(Str, 0) of
      {ok, Tokens, _} ->
        case erl_parse:parse_exprs(Tokens) of
          {ok, Exprs} -> 
            {value, Val, Bindings1} = erl_eval:exprs(Exprs, Bindings0),
              {Val, Bindings1};
	    Other ->
	      io:format("cannot parse:~p Reason=~p~n",[Tokens,Other]),
		        {parse_error, Bindings0}
	end;
      Other ->
        io:format("cannot tokenise:~p Reason=~p~n",[Str,Other])
    end.

bf(F, D) ->
    list_to_binary(io_lib:format(F, D)).

