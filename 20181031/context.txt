問題は、rolling checksumを使ってテキストに剽窃があるかどうかを検出します。問題のヒント部分に書かれているように、rolling checksumはチェックサムを計算する方法です。すなわち、次のチェックサムは、前のチェックサムから計算できます。

もともとC2の計算では39回の加算が必要ですが、rolling checksumでは3回計算するだけです。計算上は楽になる。

私の目標はファイル2がファイル1を剽窃したかどうかを確認します。まず、ファイル1の最初の40文字を取得して、その後、常に1文字後ろに移動します。そして、各ブロックのチェックサムを計算してETSテーブルに格納します。最後に、ファイル2についても同様の処理を行い、まずファイルをブロックにしてチェックサムを計算します。次に、ファイル2の各チェックサムとETSテーブルのデータを比較します。同じ各チェックサムがある場合は、このブロックの内容もファイル1に存在することを意味します。最後に、そのようなブロックの数をブロックの総数で割ったものが剽窃率です。

ランダム文字列をファイル1として選択しました。ファイル1の内容は3ページ目にあります。ファイル1の最後の単語を1234に置き換え、ファイル2の内容として使用しました。そして、自分が書いたtest関数を実行し、結果は97.96パーセンターです
